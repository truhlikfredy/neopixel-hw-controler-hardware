{
  "name": "neopixel-controler",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "config": {
    "top_module": "anton_neopixel_apb_top",
    "cpp": "neopixel.cpp",
    "cflags": "-g -O3"
  },
  "scripts": {
    "doc": "cd ./images_src && ./generate_images.sh",
    "lint": "cd rtl && verilator --lint-only $npm_package_config_top_module.v",
    "clean": "cd emul && rm -rf *.o build/* *~ *.txt *.vcd *.mif *.orig",
    "build": "cd emul && verilator -Wno-fatal -I../rtl --cc $npm_package_config_top_module.v --coverage-line --trace --exe ../$npm_package_config_cpp ../neopixel_driver.cpp ../neopixel_hal_simulation.cpp -Mdir build -CFLAGS \"-g -O3\" && make -C build -f V$npm_package_config_top_module.mk",
    "run": "cd emul/build && ./V$npm_package_config_top_module",
    "report": "mkdir report; cd report; genhtml ../emul/build/lcov.info",
    "coveralls": "cat emul/build/lcov.info | coveralls",
    "coveralls:travis": "export CI_BUILD_NUMBER=$TRAVIS_BUILD_NUMBER && export CI_PULL_REQUEST=$TRAVIS_PULL_REQUEST && export CI_BRANCH=$TRAVIS_BRANCH && env | grep CI_ && npm run-script coveralls",
    "all": "npm run-script clean && npm run-script build && npm run-script run && npm run-script report",
    "wave": "gtkwave ./emul/build/V$npm_package_config_top_module.vcd -S signals.tcl",
    "monitor-lint": "nodemon -V --watch \"rtl/$npm_package_config_top_module.v\" --watch \"rtl/anton_neopixel_registers.v\" --watch \"rtl/anton_neopixel_stream.v\" --watch \"rtl/anton_neopixel_module.v\" --watch \"rtl/anton_neopixel_stream_logic.v\" --ignore 'emul/build' --exec 'npm run-script lint'",
    "monitor-all": "nodemon -V --watch \"rtl/$npm_package_config_top_module.v\" --watch \"rtl/anton_neopixel_registers.v\" --watch \"rtl/anton_neopixel_stream.v\" --watch \"rtl/anton_neopixel_module.v\" --watch \"rtl/anton_neopixel_stream_logic.v\" --watch \"emul/$npm_package_config_cpp\" --ignore 'emul/build' --exec 'npm run-script all'"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "nodemon": "1.11.0",
    "coveralls": "^3.0.2",
    "wavedrom-cli": "^0.5.0"
  },
  "dependencies": {
  }
}
